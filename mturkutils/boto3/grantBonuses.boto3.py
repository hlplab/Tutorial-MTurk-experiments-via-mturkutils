#!/usr/bin/env python3

# Copyright (c) 2012-2018 Andrew Watts and the University of Rochester BCS Department
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

"""
Pays out bonuses to Amazon Mechanical Turk workers based on 'bonus.<expt_name>.csv'
as generated by calculate_bonus.py
"""

import argparse

from csv import DictReader
from functools import reduce
from operator import add

import boto3

from botocore.exceptions import ClientError

__author__ = 'Andrew Watts <awatts2@ur.rochester.edu>'

parser = argparse.ArgumentParser(description='Grant bonuses for HITs on Amazon Mechanical Turk')
parser.add_argument('-experiment', required=True,
                    help='(required) The name of the experiment you are granting bonuses for')
parser.add_argument('-p', '--profile',
                    help='Run commands using specific aws credentials rather the default. To set-up alternative credentials see http://boto3.readthedocs.org/en/latest/guide/configuration.html#shared-credentials-file')
args = parser.parse_args()

# Only region w/ MTurk endpoint currently is us-east-1
region = 'us-east-1'
endpoint = f'https://mturk-requester-sandbox.{region}.amazonaws.com' if args.sandbox else f'https://mturk-requester.{region}.amazonaws.com'
# If you want to use profiles, you have to create a Session with one before connecting a client
session = boto3.Session(profile_name=args.profile)

mtc = session.client('mturk', endpoint_url=endpoint, region_name=region)

try:
    available_balance = float(mtc.get_account_balance().get('AvailableBalance', 0.0))
    print(f'Available balance: ${available_balance}')
except ClientError as e:
    print(e)
    available_balance = 0.0

bonus_list = []
with open('bonus.' + args.expt_name + '.csv', 'r') as csvinfile:
    bonuses = DictReader(csvinfile)
    for row in bonuses:
        bonus_list.append(row)

bonus_sum = reduce(add, [float(x['bonus']) for x in bonus_list])

if bonus_sum > available_balance:
    print(f'Insufficient funds (${available_balance:.2f}) to pay bonuses (${bonus_sum:.2f})! Add ${bonus_sum - available_balance :.2f} to your account before proceeding')
else:
    for row in bonus_list:
        price = row['bonus']
        worker_id = row['worker']
        assignment_id = row['assignment']
        trial_count = row['trials']
        print(f'Paying ${price} bonus to {worker_id} for {trial_count} trials including {assignment_id}')
        try:
            mtc.send_bonus(
                WorkerId=worker_id,
                BonusAmount='string',
                AssignmentId=assignment_id,
                Reason=f'For doing {trial_count} HITs'
            )
        except ClientError as e:
            print(e)
